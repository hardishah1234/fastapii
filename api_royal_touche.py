# -*- coding: utf-8 -*-
"""api_royal_touche.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dSwvTno7-znHpNFVWpbyCL7ghdVAKXq6
"""

import numpy as np
import pandas as pd
import pickle

laminate = pd.read_csv('laminates.csv')

laminate.head()

laminates = laminate[['design_no','laminate_code','assigned_value','laminate']]

laminates.head()

laminates.dropna

import sklearn

from sklearn.feature_extraction.text import TfidfVectorizer

tfid = TfidfVectorizer(max_features=100)

laminates['laminate']=laminates['laminate'].fillna(' ')

tfid_matrix=tfid.fit_transform(laminates['laminate'])

tfid_matrix.shape

tfid_matrix

from sklearn.metrics.pairwise import sigmoid_kernel

sig = sigmoid_kernel(tfid_matrix, tfid_matrix)

indices = pd.Series(laminates.index, index=laminates['assigned_value']).drop_duplicates()

def recommend(title, sig=sig):
    idx = indices[title]
    sig_scores = list(enumerate(sig[idx]))
    sig_scores = sorted(sig_scores, key=lambda x: x[1], reverse=True)
    sig_scores = sig_scores[1:11]
    laminate_indices = [i[0] for i in sig_scores]
    return laminates.iloc[laminate_indices]

recommend(7005)

filename="royaletouche_pkl.pkl"
pickle.dump(laminates,open(filename,'wb'))

pickle.dump(indices,open('indicesx','wb'))

pickle.dump(sig,open('sigx','wb'))

